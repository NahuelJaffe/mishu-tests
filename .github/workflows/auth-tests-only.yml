name: Authentication Tests - All Browsers

on:
  # Solo ejecución manual - triggers automáticos deshabilitados
  workflow_dispatch:
    inputs:
      test_scope:
        description: 'Scope of authentication tests'
        required: true
        default: 'core'
        type: choice
        options:
        - core
        - extended
        - all

jobs:
  auth-tests-chromium:
    timeout-minutes: 25
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Chromium
      run: |
        echo "Installing all Playwright browsers..."
        npx playwright install --with-deps
        echo "Verifying Chromium installation..."
        npx playwright install --dry-run
    
    - name: Run Authentication Tests - Chromium
      run: |
        echo "🔐 Ejecutando tests de autenticación en Chromium"
        
        # Determinar qué tests ejecutar según el scope
        if [ "${{ github.event.inputs.test_scope }}" == "core" ]; then
          TESTS="tests/whatsapp/auth.spec.js"
          echo "📋 Scope: Core authentication tests"
        elif [ "${{ github.event.inputs.test_scope }}" == "extended" ]; then
          TESTS="tests/whatsapp/auth.spec.js tests/whatsapp/real-login-test.spec.js"
          echo "📋 Scope: Extended authentication tests"
        else
          TESTS="tests/whatsapp/auth.spec.js tests/whatsapp/real-login-test.spec.js tests/auth/login-valid.spec.js"
          echo "📋 Scope: All authentication tests"
        fi
        
        echo "🧪 Tests a ejecutar: $TESTS"
        echo "🌐 Browser: Chromium"
        
        # Ejecutar tests
        npx playwright test $TESTS \
          --project=chromium \
          --reporter=html \
          --timeout=120000 \
          --max-failures=5 \
          --retries=1
      env:
        BASE_URL: ${{ secrets.BASE_URL }}
        TEST_EMAIL: ${{ secrets.TEST_EMAIL }}
        TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
    
    - name: Upload Chromium test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: auth-test-results-chromium
        path: playwright-report/
        retention-days: 30

  auth-tests-firefox:
    timeout-minutes: 25
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Firefox
      run: |
        echo "Installing all Playwright browsers..."
        npx playwright install --with-deps
        echo "Verifying Firefox installation..."
        npx playwright install --dry-run
    
    - name: Run Authentication Tests - Firefox
      run: |
        echo "🔐 Ejecutando tests de autenticación en Firefox"
        
        # Determinar qué tests ejecutar según el scope
        if [ "${{ github.event.inputs.test_scope }}" == "core" ]; then
          TESTS="tests/whatsapp/auth.spec.js"
          echo "📋 Scope: Core authentication tests"
        elif [ "${{ github.event.inputs.test_scope }}" == "extended" ]; then
          TESTS="tests/whatsapp/auth.spec.js tests/whatsapp/real-login-test.spec.js"
          echo "📋 Scope: Extended authentication tests"
        else
          TESTS="tests/whatsapp/auth.spec.js tests/whatsapp/real-login-test.spec.js tests/auth/login-valid.spec.js"
          echo "📋 Scope: All authentication tests"
        fi
        
        echo "🧪 Tests a ejecutar: $TESTS"
        echo "🌐 Browser: Firefox"
        
        # Ejecutar tests
        npx playwright test $TESTS \
          --project=firefox \
          --reporter=html \
          --timeout=120000 \
          --max-failures=5 \
          --retries=1
      env:
        BASE_URL: ${{ secrets.BASE_URL }}
        TEST_EMAIL: ${{ secrets.TEST_EMAIL }}
        TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
    
    - name: Upload Firefox test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: auth-test-results-firefox
        path: playwright-report/
        retention-days: 30

  auth-tests-webkit:
    timeout-minutes: 25
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install WebKit
      run: |
        echo "Installing all Playwright browsers..."
        npx playwright install --with-deps
        echo "Verifying WebKit installation..."
        npx playwright install --dry-run
    
    - name: Run Authentication Tests - WebKit
      run: |
        echo "🔐 Ejecutando tests de autenticación en WebKit"
        
        # Determinar qué tests ejecutar según el scope
        if [ "${{ github.event.inputs.test_scope }}" == "core" ]; then
          TESTS="tests/whatsapp/auth.spec.js"
          echo "📋 Scope: Core authentication tests"
        elif [ "${{ github.event.inputs.test_scope }}" == "extended" ]; then
          TESTS="tests/whatsapp/auth.spec.js tests/whatsapp/real-login-test.spec.js"
          echo "📋 Scope: Extended authentication tests"
        else
          TESTS="tests/whatsapp/auth.spec.js tests/whatsapp/real-login-test.spec.js tests/auth/login-valid.spec.js"
          echo "📋 Scope: All authentication tests"
        fi
        
        echo "🧪 Tests a ejecutar: $TESTS"
        echo "🌐 Browser: WebKit"
        
        # Ejecutar tests
        npx playwright test $TESTS \
          --project=webkit \
          --reporter=html \
          --timeout=120000 \
          --max-failures=5 \
          --retries=1
      env:
        BASE_URL: ${{ secrets.BASE_URL }}
        TEST_EMAIL: ${{ secrets.TEST_EMAIL }}
        TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
    
    - name: Upload WebKit test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: auth-test-results-webkit
        path: playwright-report/
        retention-days: 30

  auth-summary:
    needs: [auth-tests-chromium, auth-tests-firefox, auth-tests-webkit]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Generate authentication test summary
      run: |
        echo "## 🔐 Authentication Tests Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Scope:** ${{ github.event.inputs.test_scope }}" >> $GITHUB_STEP_SUMMARY
        echo "**Browsers:** Chromium, Firefox, WebKit (Separate Jobs)" >> $GITHUB_STEP_SUMMARY
        echo "**Execution Time:** $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📊 Test Results:" >> $GITHUB_STEP_SUMMARY
        echo "- **Chromium:** ${{ needs.auth-tests-chromium.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Firefox:** ${{ needs.auth-tests-firefox.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **WebKit:** ${{ needs.auth-tests-webkit.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🎯 Objetivo: Validar funcionalidad de autenticación en todos los navegadores" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📋 Tests incluidos:" >> $GITHUB_STEP_SUMMARY
        if [ "${{ github.event.inputs.test_scope }}" == "core" ]; then
          echo "- tests/whatsapp/auth.spec.js" >> $GITHUB_STEP_SUMMARY
        elif [ "${{ github.event.inputs.test_scope }}" == "extended" ]; then
          echo "- tests/whatsapp/auth.spec.js" >> $GITHUB_STEP_SUMMARY
          echo "- tests/whatsapp/real-login-test.spec.js" >> $GITHUB_STEP_SUMMARY
        else
          echo "- tests/whatsapp/auth.spec.js" >> $GITHUB_STEP_SUMMARY
          echo "- tests/whatsapp/real-login-test.spec.js" >> $GITHUB_STEP_SUMMARY
          echo "- tests/auth/login-valid.spec.js" >> $GITHUB_STEP_SUMMARY
        fi